10.1 继承
ebuild可以在函数以外的全局区域中使用inherit命令来继承eclass。这么做会使得eclass被拉入，成为ebuild的一部分————任何在eclass中定义的函数和变量都会出现在ebuild中，除了某些元数据变量，这将在下文详述。

inherit命令需要一个或多个参数，这些参数必须是eclass的名称（不带路径和.eclass后缀）。eclass的拉入顺序和参数的书写顺序一致。

eclass最终可能会被拉入多次。

inherit命令还必须确保：
    * 拉入eclass时ECLASS变量的值要设为当前eclass的名称。
    * 一旦完成了所有继承，INHERITED元数据变量的值要设为以空格分隔的所有用到的eclass的名称。


10.2
当IUSE, REQUIRED_USE, DEPEND, BDEPEND, RDEPEND 和 PDEPEND变量被eclass赋值时会采取特殊处理。这些变量的值会在eclass之间累加，当前eclass所赋的值会追加到上一个eclass拉入后，这些变量最终结果的后边。随后eclass所赋的值会追加到ebuild所赋的值的后边。如果是RDEPEND，上述操作要在7.3.3节所述的隐式RDEPEND规则应用之后再做。


10.3 EXPORT_FUNCTIONS
在eclass的环境下有一个在ebuild中既不能用也没有意义的命令————EXPORT_FUNCTIONS。它可以用来给eclass中的ebuild阶段函数起别名，以便让ebuild在继承了默认定义的同时还能覆盖或调用eclass中的定义。EXPORT_FUNCTIONS的使用通过假想中的foo.eclass来说明，如代码清单10.1所示。

代码清单 10.1：EXPORT_FUNCTIONS 示例：foo.eclass

这个例子定义了一个eclass函数src_compile并且用EXPORT_FUNCTIONS给它起了一个别名。这样一来所有继承了foo.eclass的ebuild中的src_compile都将是默认定义，但如果作者希望覆盖它，就可以通过调用foo_src_compile来执行foo.eclass中的函数。

EXPORT_FUNCTIONS只能用于ebuild阶段函数，并且函数的别名必须是 eclass名称_阶段函数名称。
